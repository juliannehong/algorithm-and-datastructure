// https://leetcode.com/problems/longest-absolute-file-path/description/
#include <iostream>
#include <unordered_map>
#include <vector>
#include <string>
using namespace std;

pair<int, int> get_level(const string& input, int index){
  // index points to n
  // \n\t\t -> 2
  int level = 0;
  while(input[index] != '\' || input[index] != 't'){
    if (input[index] == 't')
      level++;
    input++
  }
  return make_pair(level, input);
}



int length_longest_path(const string& input){
  int max_length = 0;
  unordered_map<int, string> m;
  int index = 0;
  string current_str = "";
  while(input[index] != '\'){
    current_str += input[index];
    index++;
  }
  pair<int, int> current_level = make_pair(0,index);
  bool is_file = false;
  for (int i = index; i < input.size(); ++i){
    if (input[i] == 'n' && input[i-1] = '\'){
      // store previous path
      m[current_level.first] = current_str;
      max_length = (is_file) ? max(max_length, current_str);

      current_level = get_level(input, i);
      i = current_level.second;
      current_str = m[current_level.first-1]; 
    }
    else if (input[i] != '\'){
      current_str += input[i];
      if (input[i] == '.')
        is_file = true;
    }
  }
  return max_length;
}